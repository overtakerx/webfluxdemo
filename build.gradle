plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'java'
}


apply plugin: 'io.spring.dependency-management'
apply plugin: 'scala'

group = 'com.sevnis'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencyManagement {
    testCompile {
        dependencies {
            dependencySet(group: 'io.netty', version: '4.0.51.Final') {
                entry 'netty-codec-http'
                entry 'netty-codec'
                entry 'netty-handler'
                entry 'netty-buffer'
                entry 'netty-transport'
                entry 'netty-common'
                entry 'netty-transport-native-epoll'
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.scala-lang:scala-library:2.12.4'
    testImplementation 'io.gatling:gatling-app:2.3.1'
    testImplementation 'io.gatling.highcharts:gatling-charts-highcharts:2.3.1'
    testAnnotationProcessor 'org.projectlombok:lombok'
}
task gatlingRun(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath + configurations.testCompile + configurations.testCompile
    main = "io.gatling.app.Gatling"

    args = [
            '-s', 'simulations.LoadSimulation',
            '-sf', 'test/resources',
            '-df', 'test/resources',
            '-rf', "${buildDir}/reports/gatling",
    ]
}

